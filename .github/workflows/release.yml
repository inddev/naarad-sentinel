name: Release

permissions:
  contents: write
  packages: write

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux targets
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: naarad-sentinel-linux-x64
          - os: ubuntu-latest  
            target: aarch64-unknown-linux-gnu
            binary_name: naarad-sentinel-linux-arm64
          - os: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf  
            binary_name: naarad-sentinel-raspberry-pi
            
          # macOS targets
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: naarad-sentinel-macos-intel
          - os: macos-latest
            target: aarch64-apple-darwin
            binary_name: naarad-sentinel-macos-arm
            
          # Windows targets
          - os: windows-latest
            target: x86_64-pc-windows-gnu
            binary_name: naarad-sentinel-windows-x64.exe

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        override: true

    - name: Install cross-compilation tools (Linux)
      if: matrix.os == 'ubuntu-latest' && contains(matrix.target, 'aarch64')
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu

    - name: Install cross-compilation tools (ARM)
      if: matrix.os == 'ubuntu-latest' && contains(matrix.target, 'armv7')
      run: |
        sudo apt-get update  
        sudo apt-get install -y gcc-arm-linux-gnueabihf

    - name: Build binary
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --target ${{ matrix.target }}
      env:
        CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
        CARGO_TARGET_ARMV7_UNKNOWN_LINUX_GNUEABIHF_LINKER: arm-linux-gnueabihf-gcc

    - name: Prepare binary
      shell: bash
      run: |
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          cp target/${{ matrix.target }}/release/naarad-sentinel.exe ${{ matrix.binary_name }}
        else
          cp target/${{ matrix.target }}/release/naarad-sentinel ${{ matrix.binary_name }}
        fi

    - name: Upload binary as artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.binary_name }}
        path: ${{ matrix.binary_name }}

  create-release:
    needs: build-and-release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist

    - name: Flatten artifacts structure
      run: |
        mkdir -p release-files
        find dist -name "naarad-sentinel-*" -type f -exec cp {} release-files/ \;
        ls -la release-files/

    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: release-files/*
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
